* [ x] Create a new project named `17-puppy-adoption` using the `yo qunit-broccoli` command
* [ x] Run `hub create` to create a new repository on Github
* [x ] Push `master` branch
* [x ] Create `develop` branch
* [ ] **Checkpoint:** Setup Build Tools and Dev Tools
  - [ x] Use the setup npm script to install Vue, Vueify, and Vue Router
  - [x ] Uncomment the `vueify` lines from the `Brocfile.js` to enable Vueification (is that a thing?)
  - [ x] Uncomment the `app.use` code in `server/index.js` to support client-side routing for the dev server
  - [x ] Uncomment the plugins in `.eslintrc.js` to support linting for `.vue` files
* [ ] **Checkpoint:** Add styling with Bulma
  - [x ] Use `yarn` to install `bulma`
  - [x ] In `app.scss`
    * [ x] Add a `blue` variable set to `hsl(217, 71%,  53%)`
    * [x ] Add a `primary` variable set to the `blue` variable
    * [x ] Uncomment the `fa-font-path`
    * [ x] Import `bulma/bulma` before the font-awesome import
    * [x ] Make `.nav` have a background using the `primary` variable
    * [ x] Within `.nav` select `a.nav-item` and make the color set to the `white-bis` color
    * [ x] Make an `is-brand` class selector with `font-size: 1.2rem` and `font-weight: normal` to use for the left side "Puppies" in the navbar
    * [ ] **Checkpoint:** Setup Vue Router
      - [ ] Use the `vrouter` snippet to setup the Vue router in `index.js`
      - [ ] Create a `routes` directory in your `app` directory
      - [ ] Create a `application.vue` component in the `routes` directory and use the `template` snippet to fill it with the starting skeleton for a component
      - [ ] Create a `application.vue` component in the `routes` directory and use the `template` snippet to fill it with the starting skeleton for a component
    * [ ] **Checkpoint:** Static HTML Application Component
      - [ ] Using the Bulma documentation as a guide, recreate the application "wrapping" component with:
        * [ ] Navbar
          - [ ] "Puppies" (`.is-brand`) should link to the `index` route
          - [ ] "All Puppies" should link to the `index` route
          - [ ] "Add Puppy" should link to the `new` route
        * [ ] Sidebar
          - [ ] List of puppies (don't worry about `v-for` yet...)
            - [ ] Puppy image
            - [ ] Puppy name
            - [ ] "read more" link to the `detail` route passing the parameter for the `id` of the current puppy
        * [ ] Main/Outlet Area
          - [ ] `router-view`
            * [ ] Pass down `puppies` value
            * [ ] Pass down `apiUrl` value
            * [ ] Listen for `add` and trigger `addPuppy`
            * [ ] Listen for `remove` and trigger `removePuppy`
            * [ ] Listen for `update` and trigger `updatePuppy`
            * [ ] **Checkpoint:** Setup Application Data and Startup
  - [ ] Add a variable called `apiUrl` and set it to: `https://tiy-tn-class-api-fall-16.herokuapp.com/puppies/ryan` (you'll change `ryan` later)
  - [ ] Setup `data` properties:
    * [ ] `puppies` set to a blank array
    * [ ] `apiUrl` set to `apiUrl`
  - [ ] Add a `getData` function within `methods`
    - [ ] Fetch to `apiUrl`, parse the json, then set `puppies` based on the results from the API
  - [ ] Add blank functions to `methods`
    * [ ] `addPuppy`
    * [ ] `removePuppy`
    * [ ] `updatePuppy`
* [ ] **Checkpoint:** Update the application template to show sidebar with real data
  - [ ] Update sidebar to loop through puppies
  - [ ] Show individual puppy within the loop
    * [ ] Puppy image
    * [ ] Puppy name
    * [ ] Update `router-link` to link pass in the `puppy.id` as the `id` url parameter
* [ ] **Checkpoint:** Create the index template
  - [ ] Add `puppies` as an item in `props` for the component
  - [ ] Add a `router-link` to `new` so that you can go to the new form
  - [ ] Make a table head with:
    * [ ] Name
    * [ ] Age
    * [ ] Empty head
  - [ ] Make a repeating table row for each puppy in the `puppies` array and show:
    * [ ] Puppy Name
    * [ ] Puppy Age
    * [ ] A `router-link` to the `detail` route and pass the pass in the current puppy's `id` as the `id` url parameter
